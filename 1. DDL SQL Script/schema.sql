-- MySQL Script generated by MySQL Workbench
-- Mon Mar 15 03:04:42 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema myStore
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema myStore
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `myStore` DEFAULT CHARACTER SET utf8 ;
USE `myStore` ;

-- -----------------------------------------------------
-- Table `myStore`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`customer` (
  `id_client` INT NOT NULL AUTO_INCREMENT,
  `fullname_client` VARCHAR(45) NOT NULL,
  `mobile_no_client` BIGINT NOT NULL,
  `email_id` VARCHAR(45) NOT NULL,
  `birthdate_client` DATE NOT NULL,
  `total_orders` INT NOT NULL DEFAULT 0,
  `is_active` ENUM('1', '0') NOT NULL DEFAULT '1' COMMENT '1 refers to active and 0 refers to inactive state',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modifited_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_client`),
  UNIQUE INDEX `client_mobile_num_UNIQUE` (`mobile_no_client` ASC) VISIBLE,
  UNIQUE INDEX `email_id_UNIQUE` (`email_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`vendor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`vendor` (
  `id_vendor` INT NOT NULL AUTO_INCREMENT,
  `vendor_name` VARCHAR(45) NOT NULL,
  `code_vendor` VARCHAR(45) NOT NULL,
  `is_active` ENUM('1', '0') NOT NULL DEFAULT '1',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_vendor`),
  UNIQUE INDEX `vendor_name_UNIQUE` (`vendor_name` ASC) VISIBLE,
  UNIQUE INDEX `code_vendor_UNIQUE` (`code_vendor` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`article_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`article_category` (
  `id_cat` INT NOT NULL AUTO_INCREMENT,
  `cat_name` VARCHAR(45) NOT NULL,
  `total_articles_in_stock` INT NOT NULL DEFAULT 0,
  `is_active` ENUM('0', '1') NOT NULL DEFAULT '1',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_cat`),
  UNIQUE INDEX `cat_name_UNIQUE` (`cat_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`articles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`articles` (
  `id_articles` INT NOT NULL AUTO_INCREMENT,
  `name_article` VARCHAR(45) NOT NULL,
  `id_cat_article` INT NOT NULL,
  `code_article` VARCHAR(45) NOT NULL,
  `unit_price` INT NOT NULL,
  `currency` VARCHAR(45) NOT NULL DEFAULT 'EURO',
  `id_vendor` INT NOT NULL,
  `in_stock` INT NOT NULL DEFAULT 0,
  `is_visible` ENUM('1', '0') NOT NULL DEFAULT '1',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_articles`),
  UNIQUE INDEX `code_article_UNIQUE` (`code_article` ASC) VISIBLE,
  INDEX `id_cat_idx` (`id_cat_article` ASC) VISIBLE,
  INDEX `id_vendor_idx` (`id_vendor` ASC) VISIBLE,
  CONSTRAINT `id_cat`
    FOREIGN KEY (`id_cat_article`)
    REFERENCES `myStore`.`article_category` (`id_cat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `id_vendor`
    FOREIGN KEY (`id_vendor`)
    REFERENCES `myStore`.`vendor` (`id_vendor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`client_address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`client_address` (
  `id_cl_address` INT NOT NULL AUTO_INCREMENT,
  `client_id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `mobile_number` BIGINT NOT NULL,
  `building_no` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `postal_code` INT(8) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `department` VARCHAR(45) NOT NULL,
  `landmark` VARCHAR(45) NULL,
  `is_active` ENUM('1', '0') NOT NULL DEFAULT '1',
  `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_cl_address`),
  INDEX `id_client_idx` (`client_id` ASC) VISIBLE,
  CONSTRAINT `id_client`
    FOREIGN KEY (`client_id`)
    REFERENCES `myStore`.`customer` (`id_client`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`order_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`order_details` (
  `id_order` INT NOT NULL AUTO_INCREMENT,
  `vendor_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `client_address_id` INT NOT NULL,
  `order_date_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `parcel_number` VARCHAR(45) NOT NULL,
  `order_status` ENUM('created', 'approved', 'dispatched', 'delivered', 'cancelled', 'refund_request', 'refunded', 'item_exchange') NOT NULL DEFAULT 'created',
  `order_comments` TEXT NULL,
  `gross_total` INT NOT NULL,
  `discount` INT NOT NULL DEFAULT 0,
  `net_total` INT NOT NULL,
  `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id_order`),
  INDEX `id_vendor_idx` (`vendor_id` ASC) VISIBLE,
  INDEX `id_customer_idx` (`customer_id` ASC) VISIBLE,
  INDEX `client_address_id_idx` (`client_address_id` ASC) VISIBLE,
  UNIQUE INDEX `parcel_number_UNIQUE` (`parcel_number` ASC) VISIBLE,
  CONSTRAINT `id_customer`
    FOREIGN KEY (`customer_id`)
    REFERENCES `myStore`.`customer` (`id_client`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `id_vendor_fKey`
    FOREIGN KEY (`vendor_id`)
    REFERENCES `myStore`.`vendor` (`id_vendor`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `client_address_id`
    FOREIGN KEY (`client_address_id`)
    REFERENCES `myStore`.`client_address` (`id_cl_address`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `myStore`.`order_details_extnd`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `myStore`.`order_details_extnd` (
  `id_order_details_extnd` INT NOT NULL,
  `order_id` INT NOT NULL,
  `articles_id` INT NULL,
  `quantity` INT NULL,
  `gross_total` INT NULL,
  `discount` INT NULL,
  `net_total` INT NULL,
  PRIMARY KEY (`id_order_details_extnd`),
  INDEX `order_id_idx` (`order_id` ASC) VISIBLE,
  INDEX `articles_id_idx` (`articles_id` ASC) VISIBLE,
  CONSTRAINT `order_id`
    FOREIGN KEY (`order_id`)
    REFERENCES `myStore`.`order_details` (`id_order`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `articles_id`
    FOREIGN KEY (`articles_id`)
    REFERENCES `myStore`.`articles` (`id_articles`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
